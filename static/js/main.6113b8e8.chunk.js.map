{"version":3,"sources":["Components/HomeTab/index.tsx","Components/PianoTab/index.tsx","Components/EmotionalTab/index.tsx","Components/CardsTab/index.tsx","Components/MissionaryTab/index.tsx","Components/UchtdorfTab/index.tsx","Components/TabPanel/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","colorb","color","colorp","colorg","HomeTab","classes","className","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","Typography","ExpansionPanelDetails","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","color2","color3","backgroundColor","PianoTab","input","React","useState","value1","setValue1","value2","setValue2","value3","setValue3","value4","setValue4","value5","setValue5","value6","setValue6","value7","setValue7","correct","showCorrect","again","tryAgain","none","noneCorrect","allInput","splitAnswers","split","isValueCorrect","num","i","map","e","TextField","label","placeholder","value","onChange","event","target","toUpperCase","margin","variant","inputProps","readOnly","maxLength","handleChange2","handleChange3","handleChange4","handleChange5","handleChange6","handleChange7","Button","onClick","countCorrect","forEach","size","options","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","EmotionalTab","optionYellow","setOptionYellow","optionRed","setOptionRed","optionBlue","setOptionBlue","optionGreen","setOptionGreen","toString","FormControl","InputLabel","htmlFor","Select","displayEmpty","renderValue","selected","length","MenuItem","disabled","option","key","Input","CardsTab","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","console","log","MissionaryTab","Date","selectedDate","setSelectedDate","correctAnswers","dateInput","MuiPickersUtilsProvider","utils","DateFnsUtils","clearable","date","minDate","format","InputProps","UchtdorfTab","TabPanel","props","children","index","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","root","flexGrow","palette","background","paper","ScrollableTabsButtonAuto","setValue","AppBar","position","Tabs","newValue","indicatorColor","textColor","scrollButtons","aria-label","Tab","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6113b8e8.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails, } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    colorb: {\n      color: 'blue'\n    },\n    colorp: {\n      color: 'purple'\n    },\n    colorg: {\n      color: 'green'\n    }\n  }),\n);\n\n\nexport default function HomeTab() {\n  const classes = useStyles();\n\n  return (\n\n    <div>\n      <p>\n        Welcome to the Relief Society Room! Unfortunately, you cannot leave here until some tasks have been completed. Of course, I’m not actually going to lock you in and you can come and go as you please, but try to use a little imagination and at least pretend like you’re stuck here.\n      </p>\n      <div className=\"center\">\n        <ExpansionPanel >\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            className={classes.colorb}\n          >\n            <Typography className={classes.heading}>Laptop Use</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography>\n              On this web page, you’ll notice several tabs that are labeled: “Piano”, “Emotional Strings”, “Uchtdorf”, “Cards”, and “Missionary”. Once you solve these puzzles around the room, you will input the answers into their respective slots to receive further instruction.\n          </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel >\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            className={classes.colorp}\n          >\n            <Typography className={classes.heading}>Laptop Rules</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography>\n              This laptop is not to be used to look up information on the internet.\n              Stay on the “Escape the Relief Society Room” web pages only.\n            </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel >\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            className={classes.colorg}\n          >\n            <Typography className={classes.heading}>Room Rules</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography>\n              Please be aware of labels! There are many boxes in the room and for most of them a task needs to be completed before you can open the box.\n              There are many things posted around the room using pushpins. Anything that has been put up with white or black pushpins, please do not remove them they need to stay put. Any other color is free game and you can move them around or remove them altogether as you see fit.\n              You can use the clipboards, pencils, and scratch paper to take notes.\n          </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button, Theme, makeStyles, createStyles } from '@material-ui/core';\n// import { createMuiTheme } from '@material-ui/core/styles'\n\n\n\ninterface State {\n    input: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: 200,\n        },\n        color: {\n            color: 'green',\n        },\n        color2: {\n            color: 'black'\n        },\n        color3: {\n            backgroundColor: 'green'\n        }\n    }),\n);\n// const theme = createMuiTheme({\n//     palette: {\n//       action: {\n//         disabledBackground: 'green'\n//       }\n//     }\n//   });\n\n\nexport default function PianoTab() {\n\n    const classes = useStyles();\n\n    const [value1, setValue1] = React.useState<State>({ input: '' })\n    const [value2, setValue2] = React.useState<State>({ input: '' })\n    const [value3, setValue3] = React.useState<State>({ input: '' })\n    const [value4, setValue4] = React.useState<State>({ input: '' })\n    const [value5, setValue5] = React.useState<State>({ input: '' })\n    const [value6, setValue6] = React.useState<State>({ input: '' })\n    const [value7, setValue7] = React.useState<State>({ input: '' })\n\n    const [correct, showCorrect] = React.useState(false)\n    const [again, tryAgain] = React.useState(false)\n    const [none, noneCorrect] = React.useState(false)\n\n    const correctAnswers = 'GAEDFBC';\n    var allInput = value1.input + value2.input + value3.input + value4.input + value5.input + value6.input + value7.input;\n\n\n    const handleChange1 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue1({ ...value1, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange2 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue2({ ...value2, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange3 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue3({ ...value3, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange4 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue4({ ...value4, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange5 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue5({ ...value5, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange6 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue6({ ...value6, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange7 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue7({ ...value7, [input]: event.target.value.toUpperCase() });\n    };\n    var splitAnswers = correctAnswers.split('');\n\n    const checkAnswers = () => {\n        var i = 0;\n        var countCorrect = 0;\n        splitAnswers.forEach(e => {\n            if (e === allInput[i]) {\n                countCorrect++;\n\n            }\n            i++;\n            if (countCorrect > 0 && countCorrect < 7) {\n                tryAgain(true)\n                noneCorrect(false)\n            }\n\n        })\n        if (correctAnswers === allInput) {\n            tryAgain(false)\n            noneCorrect(false)\n            showCorrect(true)\n        }\n        if (countCorrect === 0) {\n            noneCorrect(true)\n        }\n    }\n    const isValueCorrect = (num: number) => {\n        var i = 0;\n        const correctArray = splitAnswers.map(e => {\n            if ((allInput[i] === correctAnswers[i] && again === true) || correct === true) {\n                i++;\n                return true;\n            }\n            i++;\n        })\n        return correctArray[num];\n    }\n\n    return (\n        <div className={classes.container} >\n            <TextField\n                id=\"#1\"\n                label=\"#1\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value1.input}\n                onChange={handleChange1('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(0) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(0),\n                    maxLength: 1\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#2\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value2.input}\n                onChange={handleChange2('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(1) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(1),\n                    maxLength: 1\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#3\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value3.input}\n                onChange={handleChange3('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(2) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(2),\n                    maxLength: 1\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#4\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value4.input}\n                onChange={handleChange4('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(3) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(3),\n                    maxLength: 1\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#5\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value5.input}\n                onChange={handleChange5('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(4) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(4),\n                    maxLength: 1\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#6\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value6.input}\n                onChange={handleChange6('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(5) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(5),\n                    maxLength: 1\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#7\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value7.input}\n                onChange={handleChange7('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(6) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(6),\n                    maxLength: 1\n                }}\n            />\n\n            {!correct && (\n                <Button onClick={checkAnswers} variant=\"contained\" size='large' color=\"secondary\" >\n                    SUBMIT\n            </Button>\n            )}\n\n            {again && (\n                <p>Some of your answers were right! Just gotta fix a few.</p>\n            )}\n\n            {none && (\n                <p>Sorry, none of those are right. Please try again</p>\n            )}\n\n            {correct && (\n                <div>\n                    <h1>CORRECT!</h1>\n                    <p>You may now open the _____________ to receive one of the words for the final clue.</p>\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\nimport { FormControl, MenuItem, Select, Input, Button, createStyles, makeStyles, Theme, } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n\n\nconst options = [\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n];\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        color: {\n            color: 'green',\n        },\n        color2: {\n            color: 'black'\n        }\n    }),\n);\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\n\nexport default function EmotionalTab() {\n\n    const classes = useStyles();\n\n    const [optionYellow, setOptionYellow] = React.useState<string[]>(['yellow']);\n    const [optionRed, setOptionRed] = React.useState<string[]>(['red']);\n    const [optionBlue, setOptionBlue] = React.useState<string[]>(['blue']);\n    const [optionGreen, setOptionGreen] = React.useState<string[]>(['green']);\n\n    const [correct, showCorrect] = React.useState(false)\n    const [again, tryAgain] = React.useState(false)\n    const [none, noneCorrect] = React.useState(false)\n\n    const correctAnswers = '7E4F';\n    var allInput = optionYellow.toString() + optionRed.toString() + optionBlue.toString() + optionGreen.toString();\n\n\n\n    function handleChangeYellow(event: React.ChangeEvent<{ value: unknown }>) {\n        setOptionYellow(event.target.value as string[]);\n    }\n    function handleChangeRed(event: React.ChangeEvent<{ value: unknown }>) {\n        setOptionRed(event.target.value as string[]);\n    }\n    function handleChangeBlue(event: React.ChangeEvent<{ value: unknown }>) {\n        setOptionBlue(event.target.value as string[]);\n    }\n    function handleChangeGreen(event: React.ChangeEvent<{ value: unknown }>) {\n        setOptionGreen(event.target.value as string[]);\n    }\n\n    const checkAnswers = () => {\n        var splitAnswers = correctAnswers.split('');\n        var i = 0;\n        var countCorrect = 0;\n        splitAnswers.forEach(e => {\n            if (e === allInput[i]) {\n                countCorrect++;\n\n            }\n            i++;\n            if (countCorrect > 0 && countCorrect < 4) {\n                tryAgain(true)\n                noneCorrect(false)\n            }\n\n        })\n        if (correctAnswers === allInput) {\n            tryAgain(false)\n            noneCorrect(false)\n            showCorrect(true)\n        }\n        if (countCorrect === 0) {\n            noneCorrect(true)\n        }\n    }\n\n\n    return (\n        <div>\n            <FormControl>\n                <InputLabel htmlFor=\"select-multiple\">Yellow</InputLabel>\n                <Select\n                    displayEmpty\n                    value={optionYellow}\n                    onChange={handleChangeYellow}\n                    renderValue={selected => {\n                        if ((selected as string).length === 0) {\n                            return <em>______</em>;\n                        }\n                        return (selected as string);\n                    }}\n                    MenuProps={MenuProps}\n                    // input={putInput}\n\n                    // SelectProps={\n                    //     optionYellow.input === correctAnswers[0] && again === true || correct === true ?\n                    //         { className: classes.color } : { className: classes.color2 }\n                    // }\n                    // inputProps={optionYellow.input === correctAnswers[0] && again === true || correct === true ?\n                    //     { readOnly: true } : { readOnly: false }\n                    // }\n                >\n                    <MenuItem disabled value=\"\">\n                        <em>______</em>\n                    </MenuItem>\n                    {options.map(option => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n            <FormControl>\n                <InputLabel htmlFor=\"select-multiple\">Red</InputLabel>\n                <Select\n                    displayEmpty\n                    value={optionRed}\n                    onChange={handleChangeRed}\n                    input={<Input id=\"select-multiple-placeholder\" />}\n                    renderValue={selected => {\n                        if ((selected as string).length === 0) {\n                            return <em>______</em>;\n                        }\n                        return (selected as string);\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    <MenuItem disabled value=\"\">\n                        <em>______</em>\n                    </MenuItem>\n                    {options.map(option => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n            <FormControl>\n                <InputLabel htmlFor=\"select-multiple\">Blue</InputLabel>\n                <Select\n                    displayEmpty\n                    value={optionBlue}\n                    onChange={handleChangeBlue}\n                    input={<Input id=\"select-multiple-placeholder\" />}\n                    renderValue={selected => {\n                        if ((selected as string).length === 0) {\n                            return <em>______</em>;\n                        }\n                        return (selected as string);\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    <MenuItem disabled value=\"\">\n                        <em>______</em>\n                    </MenuItem>\n                    {options.map(option => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n            <FormControl>\n                <InputLabel htmlFor=\"select-multiple\">Green</InputLabel>\n                <Select\n                    displayEmpty\n                    value={optionGreen}\n                    onChange={handleChangeGreen}\n                    input={<Input id=\"select-multiple-placeholder\" />}\n                    renderValue={selected => {\n                        if ((selected as string).length === 0) {\n                            return <em>______</em>;\n                        }\n                        return (selected as string);\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    <MenuItem disabled value=\"\">\n                        <em>______</em>\n                    </MenuItem>\n                    {options.map(option => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n            {!correct && (\n            <Button onClick={checkAnswers} variant=\"contained\" size='large' color=\"secondary\" >\n                SUBMIT\n            </Button>\n            )}\n\n            {again && (\n                <p>Some of your answers were right! Just gotta fix a few.</p>\n            )}\n\n            {none && (\n                <p>Sorry, none of those are right. Please try again</p>\n            )}\n\n            {correct && (\n                <div>\n                    <h1>CORRECT!</h1>\n                    <p>You may now open the _____________ to receive one of the words for the final clue.</p>\n                </div>\n            )}\n        </div>\n    );\n\n}","import React from 'react';\nimport { MenuItem, Input, InputLabel, FormControl, Select, Button } from '@material-ui/core';\n\nconst options = [\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    '10',\n    '11',\n    '12',\n    '13',\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n\nexport default function CardsTab(){\n    const [option1, setOption1] = React.useState<string[]>(['Select']);\n    const [option2, setOption2] = React.useState<string[]>(['Select']);\n    const [option3, setOption3] = React.useState<string[]>(['Select']);\n    const [option4, setOption4] = React.useState<string[]>(['Select']);\n\n    const [correct, showCorrect] = React.useState(false)\n    const [again, tryAgain] = React.useState(false)\n    const [none, noneCorrect] = React.useState(false)\n\n    const correctAnswers = '110212';\n    var allInput = option1.toString() + option2.toString() + option3.toString() + option4.toString();\n\n\n\n    function handleChange1(event: React.ChangeEvent<{ value: unknown }>) {\n        setOption1(event.target.value as string[]);\n    }\n    function handleChange2(event: React.ChangeEvent<{ value: unknown }>) {\n        setOption2(event.target.value as string[]);\n    }\n    function handleChange3(event: React.ChangeEvent<{ value: unknown }>) {\n        setOption3(event.target.value as string[]);\n    }\n    function handleChange4(event: React.ChangeEvent<{ value: unknown }>) {\n        setOption4(event.target.value as string[]);\n    }\n\n    const checkAnswers = () => {\n        console.log(allInput);\n        var splitAnswers = correctAnswers.split('');\n        var i = 0;\n        var countCorrect = 0;\n        splitAnswers.forEach(e => {\n            if (e === allInput[i]) {\n                countCorrect++;\n\n            }\n            i++;\n            if (countCorrect > 0 && countCorrect < 4) {\n                tryAgain(true)\n                noneCorrect(false)\n            }\n\n        })\n        if (correctAnswers === allInput) {\n            tryAgain(false)\n            noneCorrect(false)\n            showCorrect(true)\n        }\n        if (countCorrect === 0) {\n            noneCorrect(true)\n        }\n    }\n\n    return (\n        <div>\n            <FormControl>\n            <InputLabel htmlFor=\"select-multiple\">1</InputLabel>\n                <Select\n                    displayEmpty\n                    value={option1}\n                    onChange={handleChange1}\n                    input={<Input id=\"select-multiple-placeholder\" />}\n                    renderValue={selected => {\n                        if ((selected as string).length === 0) {\n                            return <em>______</em>;\n                        }\n                        return (selected as string);\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    <MenuItem disabled value=\"\">\n                        <em>______</em>\n                    </MenuItem>\n                    {options.map(option => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n            <FormControl>\n            <InputLabel htmlFor=\"select-multiple\">2</InputLabel>\n                <Select\n                    displayEmpty\n                    value={option2}\n                    onChange={handleChange2}\n                    input={<Input id=\"select-multiple-placeholder\" />}\n                    renderValue={selected => {\n                        if ((selected as string).length === 0) {\n                            return <em>______</em>;\n                        }\n                        return (selected as string);\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    <MenuItem disabled value=\"\">\n                        <em>______</em>\n                    </MenuItem>\n                    {options.map(option => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n            <FormControl>\n            <InputLabel htmlFor=\"select-multiple\">3</InputLabel>\n                <Select\n                    displayEmpty\n                    value={option3}\n                    onChange={handleChange3}\n                    input={<Input id=\"select-multiple-placeholder\" />}\n                    renderValue={selected => {\n                        if ((selected as string).length === 0) {\n                            return <em>______</em>;\n                        }\n                        return (selected as string);\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    <MenuItem disabled value=\"\">\n                        <em>______</em>\n                    </MenuItem>\n                    {options.map(option => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n            <FormControl>\n            <InputLabel htmlFor=\"select-multiple\">4</InputLabel>\n                <Select\n                    displayEmpty\n                    value={option4}\n                    onChange={handleChange4}\n                    input={<Input id=\"select-multiple-placeholder\" />}\n                    renderValue={selected => {\n                        if ((selected as string).length === 0) {\n                            return <em>______</em>;\n                        }\n                        return (selected as string);\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    <MenuItem disabled value=\"\">\n                        <em>______</em>\n                    </MenuItem>\n                    {options.map(option => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n            {!correct && (\n            <Button onClick={checkAnswers} variant=\"contained\" size='large' color=\"secondary\" >\n                SUBMIT\n            </Button>\n            )}\n\n            {again && (\n                <p>Some of your answers were right! Just gotta fix a few.</p>\n            )}\n\n            {none && (\n                <p>Sorry, none of those are right. Please try again</p>\n            )}\n\n            {correct && (\n                <div>\n                    <h1>CORRECT!</h1>\n                    <p>You may now open the _____________ to receive one of the words for the final clue.</p>\n                </div>\n            )}\n        </div>\n    );\n\n}","import React from 'react';\nimport { Button, createStyles, Theme } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        color: {\n            color: 'green',\n        },\n        color2: {\n            color: 'black'\n        },\n    }),\n);\n\n// function disablePrevDates(startDate) {\n//     const startSeconds = Date.parse(startDate);\n//     return (date) => {\n//       return Date.parse(date) < startSeconds;\n//     }\n//   }\n\nexport default function MissionaryTab() {\n\n    const classes = useStyles();\n\n    const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n        new Date('2021-01-01T21:11:54'),\n    );\n\n    function handleDateChange(date: Date | null) {\n        setSelectedDate(date);\n    }\n    const [correct, showCorrect] = React.useState(false)\n    const [none, noneCorrect] = React.useState(false)\n\n    const correctAnswers = new Date('2021-01-12T21:11:00');\n    if(selectedDate !== null) {\n        var dateInput = selectedDate;\n    };\n\n\n    const checkAnswers = () => {\n        if(correctAnswers !== dateInput) {\n            noneCorrect(true)\n        }\n        if (correctAnswers.toString() === dateInput.toString()) {\n            noneCorrect(false)\n            showCorrect(true)\n        }\n    }\n\n    return (\n        <div>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    clearable\n                    value={selectedDate}\n                    placeholder=\"01/01/2021\"\n                    onChange={handleDateChange}\n                    minDate={new Date()}\n                    format=\"MM/dd/yyyy\"\n                    // shouldDisableDate={disablePrevDates(startDate)}\n                    InputProps={correct === true ? \n                        {className: classes.color} : { className: classes.color2 }\n                    }\n                    inputProps={correct === true ? \n                        {readOnly: true} : {readOnly: false}\n                    }\n\n                    />\n                {/* {disabled= {correct === true ? true : false}} */}\n            </MuiPickersUtilsProvider>\n\n            {!correct && (\n                <Button onClick={checkAnswers} variant=\"contained\" size='large' color=\"secondary\" >\n                    SUBMIT\n            </Button>\n            )}\n\n            {none && (\n                <p>That's not right. Please try again</p>\n            )}\n\n            {correct && (\n                <div>\n                    <h1>CORRECT!</h1>\n                    <p>You may now open the _____________ to receive one of the words for the final clue.</p>\n                </div>\n            )}\n        </div>\n    );\n\n}","import React from 'react';\nimport { TextField, Button, makeStyles, Theme, createStyles } from '@material-ui/core';\n\n\ninterface State {\n    input: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: 200,\n        },\n        color: {\n            color: 'green',\n        },\n        color2: {\n            color: 'black'\n        },\n        color3: {\n            backgroundColor: 'green'\n        }\n    }),\n);\n\nexport default function UchtdorfTab() {\n    const classes = useStyles();\n\n    const [value1, setValue1] = React.useState<State>({ input: '' })\n    const [value2, setValue2] = React.useState<State>({ input: '' })\n    const [value3, setValue3] = React.useState<State>({ input: '' })\n    const [value4, setValue4] = React.useState<State>({ input: '' })\n    const [value5, setValue5] = React.useState<State>({ input: '' })\n\n    const [correct, showCorrect] = React.useState(false)\n    const [again, tryAgain] = React.useState(false)\n    const [none, noneCorrect] = React.useState(false)\n\n    const correctAnswers = [\n        'TREE',\n        'FAN',\n        'SPEAR',\n        'SNAKE',\n        'ROPE'\n    ];\n    var allInput = [value1.input, value2.input, value3.input, value4.input, value5.input];\n\n\n    const handleChange1 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue1({ ...value1, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange2 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue2({ ...value2, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange3 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue3({ ...value3, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange4 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue4({ ...value4, [input]: event.target.value.toUpperCase() });\n    };\n    const handleChange5 = (input: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue5({ ...value5, [input]: event.target.value.toUpperCase() });\n    };\n\n    const checkAnswers = () => {\n        console.log(allInput)\n        var i = 0;\n        var countCorrect = 0;\n        correctAnswers.forEach(e => {\n            if (e === allInput[i]) {\n                countCorrect++;\n\n            }\n            i++;\n            if (countCorrect > 0 && countCorrect < 5) {\n                tryAgain(true)\n                noneCorrect(false)\n            }\n        })\n        if (countCorrect === 5) {\n            tryAgain(false)\n            noneCorrect(false)\n            showCorrect(true)\n        }\n\n        if (countCorrect === 0) {\n            noneCorrect(true)\n        }\n    }\n\n    // var i = 0;\n    // const inputProps = {\n    //     splitAnswers.forEach(e => {\n    //         if(value1.input === correctAnswers[0] && again === true || correct === true) {\n    //             {className: classes.color}\n    //         }\n    //         i++;\n    //     }),\n    //     readOnly: true\n    //   };\n\n\n    const isValueCorrect = (num: number) => {\n        var i = 0;\n        const correctArray = correctAnswers.map(e => {\n            if ((allInput[i] === correctAnswers[i] && again === true) || correct === true) {\n                i++;\n                return true;\n            }\n            i++;\n        })\n        return correctArray[num];\n    }\n\n\n    return (\n        <div className={classes.container} >\n            <TextField\n                id=\"#1\"\n                label=\"#1\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value1.input}\n                onChange={handleChange1('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(0) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(0),\n                    maxLength: 10\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#2\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value2.input}\n                onChange={handleChange2('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(1) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(1),\n                    maxLength: 10\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#3\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value3.input}\n                onChange={handleChange3('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(2) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(2),\n                    maxLength: 10\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#4\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value4.input}\n                onChange={handleChange4('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(3) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(3),\n                    maxLength: 10\n                }}\n            />\n\n            <TextField\n                id=\"filled-name\"\n                label=\"#5\"\n                placeholder=\"Type here\"\n                className={classes.textField}\n                value={value5.input}\n                onChange={handleChange5('input')}\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{\n                    className: isValueCorrect(4) ? classes.color : classes.color2,\n                    readOnly: isValueCorrect(4),\n                    maxLength: 10\n                }}\n            />\n\n            {!correct && (\n                <Button onClick={checkAnswers} variant=\"contained\" size='large' color=\"secondary\" >\n                    SUBMIT\n            </Button>\n            )}\n\n            {again && (\n                <p>Some of your answers were right! Just gotta fix a few.</p>\n            )}\n\n            {none && (\n                <p>Sorry, none of those are right. Please try again</p>\n            )}\n\n            {correct && (\n                <div>\n                    <h1>CORRECT!</h1>\n                    <p>You may now open the _____________ to receive one of the words for the final clue.</p>\n                </div>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport HomeTab from '../HomeTab';\nimport PianoTab from '../PianoTab';\nimport EmotionalTab from '../EmotionalTab';\nimport CardsTab from '../CardsTab';\nimport MissionaryTab from '../MissionaryTab';\nimport UchtdorfTab from '../UchtdorfTab';\n\n\ninterface TabPanelProps {\n  children: any;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport default function ScrollableTabsButtonAuto() {\n  const classes = useStyles({});\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n    setValue(newValue);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Home\" {...a11yProps(0)} />\n          <Tab label=\"Piano\" {...a11yProps(1)} />\n          <Tab label=\"Emotional Strings\" {...a11yProps(2)} />\n          <Tab label=\"Uchtdorf\" {...a11yProps(3)} />\n          <Tab label=\"Cards\" {...a11yProps(4)} />\n          <Tab label=\"Missionary\" {...a11yProps(5)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <HomeTab />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <PianoTab />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <EmotionalTab />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <UchtdorfTab />\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        <CardsTab />\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        <MissionaryTab />\n      </TabPanel>\n    </div>\n  );\n}","import React from 'react';\nimport './App.css';\nimport ScrollableTabsButtonAuto from './Components/TabPanel';\n\ninterface AppProps {\n  //from TabPanel\n\n}\n\nfunction App(props: AppProps) {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <h1>Escape the Relief Society Room</h1>\n\n      </header>\n\n      <nav>\n        <ScrollableTabsButtonAuto\n        />\n      </nav>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}